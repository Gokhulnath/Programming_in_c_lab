


/*Modify A1(1) to have a function CheckOddEven(num) that checks if the num is odd or
even; sets a flag accordingly and return it. Use this function to find the sum of even and
odd numbers in a given input of N numbers.*/


#include <stdio.h>

int check(int a)
{
	if((a%2)==0)
	{
	 	printf("it is even\n");

	}
	else
	{
	 	printf("it is odd\n");
	
	}

}

int flag(int a)
{
	 int flag = 1;
	if((a%2)==0)
		{
			flag=1;

		}
	else
    {
	 	flag=0;
	}

	return flag;
}



int main(void)
{
	int a , terms , osum=0 , esum=0;
	printf("enter number of terms\n");
	scanf("%d",&terms);
	for(int i=0;i<terms;i++)
		{
			 scanf("%d",&a);
			 check(a);
			 if(flag(a))
				 {
				   esum+=a;
				 }
			 else
				 {
				   osum+=a;
                 }  


	}
	printf("sum of even numbers %d",esum);
	printf("\nsum of odd numbers %d",osum);

}

/*
output:
enter number of terms
5
3
it is odd
4
it is even
5
it is odd
6
it is even
7
it is odd
sum of even numbers 10
sum of odd numbers 15
*/


/*-----------------------------------------------------------------------------------------------------*/

/*Write a C function ReverseNum(num) that takes integer num and reverses its digits. Let
num be passed by reference*/

#include<stdio.h>

void reversenum(int a)
{
	int b=0,n=0;
	while(a!=0)
	{
		 b=a%10;
		 printf("%d",b);
		 a=a/10;

	}
 

}


void main()
{
	int n=0;
	printf("enter the number u want to reverse\n");
	scanf("%d",&n);
	reversenum(n);
	printf("\n");

}

/*
output:
enter the number u want to reverse
1000
0001
*/

/*-----------------------------------------------------------------------------------------------------*/


/*Write a function power(X,N) that will allow a floating-point number to be raised to an
integer power. Y = X N*/


#include<stdio.h>

float power(float x,int n)
{
	float temp=1.0;
	int i=1;
	for(i;i<=n;i++)
		{
			temp*=x;

		}


	return temp;


}

void main()
{
	int n;
	float x,p;
	printf("enter the base and exponent\n");
	scanf("%f",&x);
	scanf("%d",&n);
	if(n<0)
		{
			 p=power(x,-n);
			 p=1/p;
		}
	else
		{
		 	p=power(x,n);
		}
	printf(" the power is %f \n",p);
}

/*
output:
enter the base and exponent
1.3
5
 the power is 3.712929 
*/


/*-----------------------------------------------------------------------------------------------------*/

/*Find the product of n floating point numbers. The numbers should be read from the
keyboard. You should not use any looping construct. [Hint: use recursion and decide a
suitable sentinel for termination of recursion.]*/


#include<stdio.h>

int product(float n)
{
	float a;
	scanf("%f",&a);
	if(a==0)
		{
		 	return 1;

		}
	else
		{
		 	return(a*(product(a)));
		}
}




void main()
{
	 float n,p;
	 printf("enter 0 to terminate\n");
	 p=product(n);
	 printf("%f",p);
}

/*
output:
enter 0 to terminate
5
9
4
12
0
2160.000000
*/

/*-----------------------------------------------------------------------------------------------------*/

/*rite a recursive function that reads N and prints from N to 0.*/


#include <stdio.h>

void numprint(int a, int n)
{
   if(a > n)
       return;
  
   printf("%d, ", n);

   numprint(a, n-1);
}


void main()
{
   int a=0, n;

   printf("Enter the number ");
   scanf("%d", &n);

   numprint(a, n-1);
  
}


/*
output:
Enter the number 10
9, 8, 7, 6, 5, 4, 3, 2, 1, 0
*/


/*-----------------------------------------------------------------------------------------------------*/

/*Factorials*/

#include<stdio.h>
long factorial(int n)
{
	 if (n == 0)
	   return 1;
	 else
	   return(n * factorial(n-1));
}
void main()
{
	 int n,a;
	 long f;
	 printf("Enter an integer to find its factorial\n");
	 scanf("%d", &n);

	   f = factorial(n);

	 while(a==0)
	 {
	   a=f%10;
	   f=f/10;
	 }
	 printf("%d",a);

}


/*
output:
Enter an integer to find its factorial
10
8
*/

/*-----------------------------------------------------------------------------------------------------*/


/*tic tac toe*/

#include<stdio.h>
#include<stdlib.h>
char play='X';
char val='O';

void main()
{
	int op,pos,count=0;
	char a1=' ',a2=' ',a3=' ',b1=' ',b2=' ',b3=' ',c1=' ',c2=' ',c3=' ';
	//char a1=a2=a3=b1=b2=b3=c1=c2=c3=' ';


	printf("\n\nChoose Player (1 or 2): ");
	scanf("%d",&op);
	play='X';val='O';

	while(count<9)
		{
			if((op==2 && play=='X')|| (op==1 && play=='O'))
			 	pos=(rand()%9 +1);
			else
			{
				printf("Player %c : Choose position(1-9): ",play);
				scanf("%d",&pos);
			}
		switch(pos)
			{
			case 1: if(a1==' ')
				 {a1=play;count++;}
				else
				 {if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;
			case 2: if(a2==' ')
				{a2=play;count++;}
				else {
				if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;
			case 3: if(a3==' ')
				{a3=play;count++;}
				else {
				if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;
			case 4: if(b1==' ')
				{b1=play;count++;}
				else if(op==2 && play=='O'|| (op==1 && play=='X'))
				{printf("wrong move\n");play=val;}
				break;
			case 5: if(b2==' ')
				{b2=play;count++;}
				else {
				if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;
			case 6: if(b3==' ')
				{b3=play;count++;}
				else {
				if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;
			case 7: if(c1==' ')
				{c1=play;count++;}
				else {
				if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;
			case 8: if(c2==' ')
				{c2=play;count++;}
				else {
				if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;
			case 9: if(c3==' ')
				{c3=play;count++;}
				else {
				if(op==2 && play=='O'|| (op==1 && play=='X'))
				printf("wrong move\n");
				play=val;}
				break;

			}

	printf("%c\t%c\t%c\n\n%c\t%c\t%c\n\n%c\t%c\t%c\n\n",a1,a2,a3,b1,b2,b3,c1,c2,c3);
	printf("-----------------------------------------------\n");

	if((a1==a2 && a2==a3) && a1!=' ' && a2!= ' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}
	else if((b1==b2 && b2==b3) && b1!=' ' && b2!=' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}
	else if((c1==c2 && c2==c3) && c1!=' ' && c2!=' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}
	else if((a1==b1 && b1==c1) && a1!=' ' && b1!=' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}
	else if((a2==b2 && b2==c2) && b2!=' ' && a2!=' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}
	else if((a3==b3 && c3==a3) && a3!=' ' && b3!=' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}
	else if((a1==b2 && b2==c3) && a1!=' ' && b2!=' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}
	else if((c1==b2 && b2==a3) && c1!=' ' && b2!=' ') 
		{
		printf("\nPlayer %c Wins!!!\n",play);
		break;
		}

	if(play =='X')
	 	{play='O';
	 	val='X';
		}
	else
	 	{
		play='X';
		val='O';
		}

	}
	//printf("\n\n%d",count);
	if (count==9)
	printf("\nDraw match !!!\n");

}


/*


output:


Choose Player (1 or 2): 2
 	X	 

 	 	 

 	 	 

-----------------------------------------------
Player O : Choose position(1-9): 1
O	X	 

 	 	 

 	 	 

-----------------------------------------------
O	X	 

 	 	 

 	X	 

-----------------------------------------------
Player O : Choose position(1-9): 5
O	X	 

 	O	 

 	X	 

-----------------------------------------------
O	X	 

 	O	X

 	X	 

-----------------------------------------------
Player O : Choose position(1-9): 9
O	X	 

 	O	X

 	X	O

-----------------------------------------------

Player O Wins!!!

*/




