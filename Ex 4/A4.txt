


/* 1. Implement any three of the following functions. Write the required functions such as
strlen(str), isUpper (ch), toLower (ch), toUpper (ch) without using library functions. */



#include<stdio.h>

int stringlen(char str[])
{
  int i=0,length=0;
  while(i<100)
  {
    if(str[i]=='\0')
    {
      length=i;
      break;
    }
    i++;

  }
  return length;
}

int upper(char str[])
{
  int j=0,m=0;
  while(j<100)
  {
    if(str[j]=='\0')
    {
      return m;
    }
    else
    {
      
       if(str[j]<91)
          m=1;
       else
          m=0;
    
    }
    j++;

  }
}
int lowering(char str[])
{
  int j=0;
  while(j<100)
  {
    if(str[j]=='\0')
    {
      printf("the string after lowering is %s\n",str);
      break;
    }
    else
    { if(str[j]>64 && str[j]<91)
      str[j]=str[j]+32;
    
    }
    j++;

  }
}
int uppering(char str[])
{
  int j=0;
  while(j<100)
  {
    if(str[j]=='\0')
    {
      printf("the string after uppering is %s\n",str);
      break;
    }
    else
    {
      if(str[j]>96 && str[j]<123)
      str[j]=str[j]-32;
    
    }
    j++;

  }
}
int strch(char str[],char x)
{
 int j;
 for(j=0;j<100;j++)
 {
     if(str[j]==x)
     {
        return j;
        break;
        
     }
     
   }

}
int strcmp(char str1[],char str2[])
{
   int i,m=0;
   for(i=0;i<=stringlen(str1);i++)
   {
     if(str1[i]==str2[i])
     {
        m=m+1;
     }
     else
      {  m=0;
        break;}
  }
  if(m>0)
  return 1;
  else
  return 0;
}
int stringcpy(char dest[],char src[],int n)
{
   int i;
   for(i=0;i<n;i++)
   {
      dest[i]=src[i];
   }
   return dest[n];
   
}
void main()
{
  char string[100],string1[100];
  int d,num;
char ch;
  printf("enter the string\n");
  scanf(" %[^\n]s",string);
  printf("enter the character to be searched\n");
  scanf(" %c",&ch);
  printf("the character found at %d\n",strch(string,ch));
    num=stringlen(string);
    printf("enter the string2\n");
  scanf(" %[^\n]s",string1);
  printf("the compare value is %d\n",strcmp(string,string1));
  string1[100]=stringcpy(string1,string,num);
  printf("the string after copy \n%s\n",string1);
}




/*

Output:

enter the string
gokhul
enter the character to be searched
k
the character found at 2
enter the string2
nath
the compare value is 0
the string after copy 
gokhul


*/

/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/



/* 2. Write a program to search the last occurrence of a substring in a given string. */



#include<stdio.h>
void main()
{
 char string[100];
 int num,i=0,j,number,m=0,n,index;
 char word[50]=" ";
 printf("enter no of characters\n ");
 scanf("%d",&num);
 printf("enter the string\n ");
 scanf(" %[^\n]s",string);
 printf("enter no of characters\n ");
 scanf("%d",&number);
 char key[number];
 printf("enter the substring to be searched\n ");
 scanf("%s",key); 
 printf("the string is %s\n",string);
 printf("the string to be searched %s\n",key);
 for(j=0;j<=num;j++)
 {
     if(string[j]==' '||string[j]=='\0')
     {
        word[i]='\0';
        for(n=i;n>=0;n--)
        {
        if(k[n]==word[n])
        {
          m=m+1;
          if(n==i)
          {
            index=j-n+1;
          }
        }
        else
        { 
          m=0;
          index=0;
          break;
        }
        }
        i=0;
        
     }
     else
     {
        word[i]=string[j];
        i++;
     
     }
     
   }
   if(m>0)
    printf("the string found at \n %d\n",index);
   else
    printf("the string not found\n");
}



/*
Output:
enter no of characters
 11
enter the string
 gokhul nath
enter no of characters
 4
enter the substring to be searched
 nath
the string is gokhul nath
the string to be searched nath
the string found at 
 8

*/


/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


/* 3. Write a program which replaces a substring with another in a given line of text. */



#include<stdio.h>
void main()
{
 char string[100];
 int num,i=0,j,number,m=0,n,o,s;
 char word[50]=" ";
 printf("enter no of characters ");
 scanf("%d",&num);
 printf("enter the string ");
 scanf(" %[^\n]s",string);
 printf("enter no of characters ");
 scanf("%d",&number);
 char k[number];
 char replace[number];
 printf("enter the substring to be searched ");
 scanf("%s",k); 
 printf("enter the replace substring ");
 scanf("%s",replace);
 printf("the string is %s\n",string);
 printf("the string to be searched %s\n",k);
 printf("the replace string %s\n",replace);
 for(j=0;j<=num;j++)
 {
     if(string[j]==' '||string[j]=='\0')
     {
        word[i]='\0';
        for(n=i;n>=0;n--)
        {
        if(k[n]==word[n])
        {
          m=m+1;
          if(n==0)
          {
            for(o=j-i,s=0;o<j,s<number;o++,s++)
            {
               string[o]=replace[s];          
   
            }
          }
        }
        else
        { 
          m=0;
          break;
        }
        }
        i=0;
        
     }
     else
     {
        word[i]=string[j];
        i++;
     
     }
     
   }
    printf("the string after replace is %s\n",string);
}


/*
Output:

enter no of characters 11
enter the string gokhul nath
enter no of characters 4
enter the substring to be searched nath
enter the replace substring maran
the string is gokhul nath
the string to be searched nath
the replace string maran
the string after replace is gokhul maran
*/



/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/


/* 4. Write a program to reverse a string without using the library function. No extra string should
be used and the source string itself should be modified to store the reversed string. Number of
exchanges should be minimum. */


#include<stdio.h>
void main()
{
 char string[100];
 int num,i,j;
 int k=0;
 printf("enter no of characters");
 scanf("%d",&num);
 printf("enter the string");
 scanf("%s",string);
 printf("the string is %s\n",string);
 for(j=0;j<num;j++)
 {
   
 for(i=num;i>k;i--)
 {
     int temp;
     if(string[i]=='\0')
     {
        continue;
     }
     else
     {
        temp=string[i-1];
        string[i-1]=string[i];
        string[i]=temp;
     
     }
   }
   k++;
 }

 printf("the string after change is %s\n",string);
}


/*
output:

enter no of characters6
enter the stringgokhul
the string is gokhul
the string after change is luhkog

*/



/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/



/* 5. Write an interactive C program that will encode or decode a line of text. To encode a line of text. */



#include<stdio.h>
#include<time.h>
#include<string.h>
void encode(char s1[],int n){
	char *p=s1;
	int x;
	while(*p){
		x=(int)*p+n;
		if(x>126){
			x=32+(x%126);
		}
		*p=(char)x;
		p++;
	}
	printf("\nThe word after encoding:%s",s1);
}
void decode(char s1[],int n){
	char *p=s1;
	int x;
	while(*p){
		x=(int)*p-n;
		if(x<32){
			x=126-(n-(*p-32)); 
		}
		*p=(char)x;
		p++;
	}
	printf("\nThe word after decoding:%s",s1);
}
void main(){
	char s1[50];
	srand(time(0));
	int key;
	do{
	printf("\n\nEnter word to be encoded or stop:");
	scanf("%s",s1);
	key=rand()%126;
	if(strcmpi(s1,"stop")){
		encode(s1,key);
		decode(s1,key);}
	}while(strcmpi(s1,"stop"));
}


/*

output:


Enter word to be encoded or stop:hello

The word after encoding:pmttw
The word after decoding:hello

Enter word to be encoded or stop:stop
*/




/*------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
